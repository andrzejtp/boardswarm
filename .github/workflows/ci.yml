name: test suite
on:
  push:
    branches-ignore:
      - "gh-readonly-queue/**"
  pull_request:
  merge_group:

jobs:
  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Install build-depends
        run: sudo apt install -y protobuf-compiler libudev-dev
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.70.0
      - run: cargo test --all-targets --all-features

  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.70.0
        with:
          components: rustfmt
      - run: cargo fmt --all --check

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: Install build-depends
        run: sudo apt install -y protobuf-compiler libudev-dev
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.70.0
        with:
          components: clippy
      - run: cargo clippy --all-targets -- -D warnings

  minimal-dependencies:
    name: minimal direct dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Install build-depends
        run: sudo apt install -y protobuf-compiler libudev-dev
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: cargo check -Z direct-minimal-versions

  release-builds:
    strategy:
      matrix:
        arch:
          - {debian: "arm64", "triplet": aarch64-unknown-linux-gnu}
          - {debian: "amd64", "triplet": x86_64-unknown-linux-gnu}
    name: Release builds
    runs-on: ubuntu-latest
    container:
      image: rust:bookworm
    steps:
      - uses: actions/checkout@v4
      - name: Add ${matrix.arch} architecture
        run: dpkg --add-architecture ${{matrix.arch.debian}}
      - name: Install build-depends
        run:
          apt update && apt install -y
            protobuf-compiler
            libudev-dev:${{matrix.arch.debian}}
            libssl-dev:${{matrix.arch.debian}}
      - name: Setup arm64 environment
        if: matrix.arch.debian == 'arm64'
        run: |
          rustup target add aarch64-unknown-linux-gnu
          apt install -y gcc-aarch64-linux-gnu
          cat << EOF >> "$GITHUB_ENV"
          PKG_CONFIG_PATH_aarch64_unknown_linux_gnu=/usr/lib/aarch64-linux-gnu/pkgconfig
          PKG_CONFIG_ALLOW_CROSS=1
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          EOF
      - name: build
        run: cargo build --release --target ${{matrix.arch.triplet }}
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            target/*/release/boardswarm
            target/*/release/boardswarm-cli

  allgreen:
    if: always()
    needs:
      - test
      - fmt
      - clippy
      - minimal-dependencies
    runs-on: Ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
